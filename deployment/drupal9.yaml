apiVersion: apps/v1
kind: Deployment
metadata:
  name: drupal
  app: drupal
spec:
  replicas: 3
  selector:
    matchLabels:
      app: drupal
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: drupal
    spec:
      containers:
      - image: gcr.io/the-slate-133223/k8s-alpine-drupal@sha256:cfd88b8168d8ba66f37830473f0be8b4c99e194b11a57019868393b17b5521b3
        securityContext:
          capabilities:
            add: ["SYS_ADMIN", "SETPCAP"]
        imagePullPolicy: IfNotPresent
        name: k8s-alpine-drupal-sha256-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2020-06-30T21:40:23Z"
    lastUpdateTime: "2020-06-30T21:40:23Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2020-06-30T21:40:01Z"
    lastUpdateTime: "2020-06-30T21:40:23Z"
    message: ReplicaSet "drupal9-77cf9574b8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
---
apiVersion: v1
kind: Service
metadata:
  name: drupal
  labels:
    app: drupal
spec:
  ports:
  - port: 80
    name: web
  - port: 443
    name: sweb
  clusterIP: None
  selector:
    app: drupal
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: drupal # has to match .spec.template.metadata.labels
  serviceName: "drupal"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: drupal # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: drupal
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        - containerPort: 443
          name: sweb
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "my-storage-class"
      resources:
        requests:
          storage: 1Gi
